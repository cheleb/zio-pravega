name: Release

on:
  push:
    tags:
     - v*

jobs:
  build:
    if: github.event.base_ref=='refs/heads/master'  # check the branch, if it's not master, skip the job.
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 18
      uses: actions/setup-java@v3
      with:
        java-version: '18'
        distribution: 'temurin'
        cache: sbt
    - name: Run tests crosscompile
      run: sbt ++ test
    - name: Run coverage test
      run: sbt coverage test
    - name: Coverage Report
      run: sbt coverageReport
    - name: "Upload coverage to Codecov"
      uses: "codecov/codecov-action@v3"
      with:
        fail_ci_if_error: true
  publish:
    if: github.event.base_ref=='refs/heads/master' && github.event_name != 'pull_request'  # check the branch, if it's not master, skip the job.
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    needs: [build]
    steps:
      - uses: actions/checkout@v3.0.2
        with:
          fetch-depth: 0
      - uses: olafurpg/setup-scala@v13
      - run: sbt ci-release
        env:
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
  website:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
#          cache: yarn
      - name: Set up JDK 18
        uses: actions/setup-java@v3
        with:
          java-version: '18'
          distribution: 'temurin'
          cache: sbt
      - run: sbt clean docs/docusaurusCreateSite
      - uses: webfactory/ssh-agent@v0.5.0
        with:
          ssh-private-key: ${{ secrets.GH_PAGES_DEPLOY }}
      - name: Deploy to GitHub Pages
        env:
          USE_SSH: true
        run: |
          cd website
          git config --global user.email "olivier.nouguier@gmail.com"
          git config --global user.name "gh-actions"
          yarn install --frozen-lockfile
          yarn deploy