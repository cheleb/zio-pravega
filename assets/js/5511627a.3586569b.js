"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1230],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>f});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),s=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},l=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),m=s(r),f=a,d=m["".concat(p,".").concat(f)]||m[f]||u[f]||i;return r?n.createElement(d,o(o({ref:t},l),{},{components:r})):n.createElement(d,o({ref:t},l))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=m;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var s=2;s<i;s++)o[s]=r[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},106:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>s});var n=r(7462),a=(r(7294),r(3905));const i={sidebar_position:2},o="Write to stream",c={unversionedId:"quickstart/write",id:"quickstart/write",title:"Write to stream",description:"",source:"@site/../zio-pravega-docs/target/mdoc/quickstart/write.md",sourceDirName:"quickstart",slug:"/quickstart/write",permalink:"/zio-pravega/docs/quickstart/write",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Create scope and stream",permalink:"/zio-pravega/docs/quickstart/admin"},next:{title:"Read from stream",permalink:"/zio-pravega/docs/quickstart/read"}},p={},s=[],l={toc:s};function u(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"write-to-stream"},"Write to stream"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},'import zio._\nimport zio.pravega._\nimport zio.stream._\n\nimport io.pravega.client.stream.impl.UTF8StringSerializer\n\nobject StreamWriteExample extends ZIOAppDefault {\n\n  val clientConfig = PravegaClientConfig.default\n\n  val stringWriterSettings =\n    WriterSettingsBuilder()\n      .eventWriterConfigBuilder(_.enableLargeEvents(true))\n      .withSerializer(new UTF8StringSerializer)\n\n  private def testStream(a: Int, b: Int): ZStream[Any, Nothing, String] =\n    ZStream\n      .fromIterable(a to b)\n      .map(i => f"$i%04d_name $i")\n\n  val program = for {\n    sink <- PravegaStream.sink(\n      "a-stream",\n      stringWriterSettings\n    )\n    _ <- testStream(1, 10)\n      .tap(p => ZIO.debug(p.toString()))\n      .run(sink)\n    _ <- ZIO.log("Coucou")\n\n  } yield ()\n\n  override def run: ZIO[Environment with ZIOAppArgs with Scope, Any, Any] =\n    program.provide(\n      Scope.default,\n      PravegaStream.fromScope("a-scope", clientConfig)\n    )\n\n}\n')))}u.isMDXComponent=!0}}]);